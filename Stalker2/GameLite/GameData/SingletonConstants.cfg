TimeManager : struct.begin 
   Latitude = 51.23f
   Longitude = 30.3f
   TimeZone = 2.f
   NorthOffsetAngle = 90.f
   LightSourceFadingDurationHoursOnDayNightChange = 2.f
   SunLightMaxBrightness = 3.14f
   MoonLightMaxBrightness = 1.046f
   StarsBrightness = 0.1f
   CloudSpeed = 1.f
   CloudOpacity = 0.7f
   StartYear = 2021
   StartMonth = 8
   StartDay = 1
   StartHour = 9
   StartMinute = 0
   StartSecond = 0
struct.end
InputManager : struct.begin
   Keyboard : struct.begin
      ControllerType = EInputController::KeyboardAndMouse
      Actions : struct.begin
         [*] : struct.begin
            ActionName = EInputKey::None
            TimeThresholdHold = 0.0
         struct.end
      struct.end
   struct.end
   Dualshock4 : struct.begin
      ControllerType = EInputController::Dualshock4
      Actions : struct.begin
         [*] : struct.begin
            ActionName = EInputKey::Square
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::Cross
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::Circle
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::Triangle
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::LeftShoulder
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::LeftTrigger
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::LeftThumbstickButton
            TimeThresholdHold = 0.1
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::RightShoulder
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::RightTrigger
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::RightThumbstickButton
            TimeThresholdHold = 0.5
         struct.end
         [*] : struct.begin
            ActionName = EInputKey::None
            TimeThresholdHold = 0.0
         struct.end
      struct.end
   struct.end
struct.end
ReflectionManager : struct.begin
// 0.f for each frame 
   ReflectionManagerTickTime = 0.f
// We have to leave some space for map baked reflections
   ReflectionSpherePoolMaxSize = 150
// units
   ReflectionSphereRadius = 3000.f
// units, used for local and global grid both 
   ReflectionSphereGridSizeX = 2500.f
   ReflectionSphereGridSizeY = 2500.f
   ReflectionSphereGridSizeZ = 2500.f
   ReflectionFloorHeight = 200.f
   ReflectionSphereGridLoadCoef = 1.f
   ReflectionSphereGridUnloadCoef = 2.f
   ReflectionCubemapResolution = 128
// CalculateImageBytes(Const::ReflectionCubeMapResolution, Const::ReflectionCubeMapResolution, 0, PF_B8G8R8A8);
   ReflectionCubemapMipSize = 65536
// Global grid is used to locate sphere coordinates in world. 
   ReflectionSphereGlobalGridWidth = 64
   ReflectionSphereGlobalGridHeight = 64
   ReflectionSphereGlobalGridDepth = 10
// Local grid centers around player.
// Grid should be uniform on XY plane
   ReflectionSphereLocalGridWidth = 2
   ReflectionSphereLocalGridHeight = 2
   ReflectionSphereLocalGridDepth = 2
   ReflectionNonGeneratedLimit = 20
   ReflectionUpdateDistancesSqr : struct.begin
      High = 0.f
      // 2.5m
      Medium = 62500.f
      // 5m
      Low = 250000.f
      Minimal = 562500.f
   struct.end
struct.end
CustomAssetManager : struct.begin
   bDebugLogAssetLoading = false
struct.end
SpeechManager : struct.begin
   SpeechEventCooldown : struct.begin
      [0] : struct.begin
         EventType = ESpeechEventType::Combat_HitByEnemy
         CooldownSec = 25.f
      struct.end
      [1] : struct.begin
         EventType = ESpeechEventType::Combat_Reloading
         CooldownSec = 25.f
      struct.end
      [2] : struct.begin
         EventType = ESpeechEventType::Combat_TakeCover
         CooldownSec = 25.f
      struct.end
	  [3] : struct.begin
         EventType = ESpeechEventType::Combat_EnemySearch
         CooldownSec = 25.f
      struct.end
	  [4] : struct.begin
         EventType = ESpeechEventType::Combat_EnemyDetected
         CooldownSec = 25.f
      struct.end
   struct.end
struct.end
BrokenGameDataManager : struct.begin
   NotifyFadeInDuration = 0.1f
   NotifyFadeOutDuration = 0.5f
   NotifyExpireDuration = 3.0f
struct.end