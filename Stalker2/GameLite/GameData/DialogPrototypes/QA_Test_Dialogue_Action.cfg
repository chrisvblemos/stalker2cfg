QA_Test_Dialogue_Action_OpenTradeMenu_69555 : struct.begin
   SID = QA_Test_Dialogue_Action_OpenTradeMenu_69555
   Text = sid_phrase_QA_Test_Dialogue_Action_OpenTradeMenu_69555
   AnswerText = sid_label_QA_Test_Dialogue_Action_OpenTradeMenu
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_OpenTradeMenu_69555
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::OpenTradeMenu
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_OpenUpgradeMenu_69556 : struct.begin
   SID = QA_Test_Dialogue_Action_OpenUpgradeMenu_69556
   Text = sid_phrase_QA_Test_Dialogue_Action_OpenUpgradeMenu_69556
   AnswerText = sid_label_QA_Test_Dialogue_Action_OpenUpgradeMenu
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_OpenUpgradeMenu_69556
   AKEventSubPath = General/Semen/
   FaceAnimationSubPath = General/Semen/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_OpenUpgradeMenu_69556
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::OpenUpgradeMenu
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_GiveMoney_69558 : struct.begin
   SID = QA_Test_Dialogue_Action_GiveMoney_69558
   Text = sid_phrase_QA_Test_Dialogue_Action_GiveMoney_69558
   AnswerText = sid_label_QA_Test_Dialogue_Action_GiveMoney
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_GiveMoney_69558
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_GiveMoney_70775
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Bribe
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::Int
            VariableValue = 1000
         struct.end
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::Money
            ConditionComparance = EConditionComparance::GreaterOrEqual
            Money : struct.begin
               VariableType = EGlobalVariableType::Int
               VariableValue = 1000
            struct.end
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_GiveMoney_70775 : struct.begin
   SID = QA_Test_Dialogue_Action_GiveMoney_70775
   Text = sid_phrase_QA_Test_Dialogue_Action_GiveMoney_70775
   AnswerText = sid_label_QA_Test_Dialogue_Action_GiveMoney
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 1
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_GiveMoney_70775
   AKEventSubPath = General/Semen/
   FaceAnimationSubPath = General/Semen/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_GiveMoney_70775
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions =
struct.end
QA_Test_Dialogue_Action_GetMoney_69559 : struct.begin
   SID = QA_Test_Dialogue_Action_GetMoney_69559
   Text = sid_phrase_QA_Test_Dialogue_Action_GetMoney_69559
   AnswerText = sid_label_QA_Test_Dialogue_Action_GetMoney
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_GetMoney_69559
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_GetMoney_70776
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::GetMoney
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::Int
            VariableValue = 1000
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_GetMoney_70776 : struct.begin
   SID = QA_Test_Dialogue_Action_GetMoney_70776
   Text = sid_phrase_QA_Test_Dialogue_Action_GetMoney_70776
   AnswerText = sid_label_QA_Test_Dialogue_Action_GetMoney
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 1
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_GetMoney_70776
   AKEventSubPath = General/Semen/
   FaceAnimationSubPath = General/Semen/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_GetMoney_70776
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions =
struct.end
QA_Test_Dialogue_Action_AttackUI_69560 : struct.begin
   SID = QA_Test_Dialogue_Action_AttackUI_69560
   Text = sid_phrase_QA_Test_Dialogue_Action_AttackUI_69560
   AnswerText = sid_label_QA_Test_Dialogue_Action_AttackUI
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_AttackUI_69560
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID =
         Terminate = true
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Attack
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_HitUI_69561 : struct.begin
   SID = QA_Test_Dialogue_Action_HitUI_69561
   Text = sid_phrase_QA_Test_Dialogue_Action_HitUI_69561
   AnswerText = sid_label_QA_Test_Dialogue_Action_HitUI
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_HitUI_69561
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID =
         Terminate = true
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Hit
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_Bye_69562 : struct.begin
   SID = QA_Test_Dialogue_Action_Bye_69562
   Text = sid_phrase_QA_Test_Dialogue_Action_Bye_69562
   AnswerText = sid_label_QA_Test_Dialogue_Action_Bye
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Bye_69562
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID =
         Terminate = true
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Bye
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_ShowItem_69563 : struct.begin
   SID = QA_Test_Dialogue_Action_ShowItem_69563
   Text = sid_phrase_QA_Test_Dialogue_Action_ShowItem_69563
   AnswerText = sid_label_QA_Test_Dialogue_Action_ShowItem
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_ShowItem_69563
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::ShowItem
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::String
            VariableValue = Vodka
         struct.end
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::ItemInInventory
            ConditionComparance = EConditionComparance::GreaterOrEqual
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            ItemPrototypeSID : struct.begin
               VariableType = EGlobalVariableType::String
               VariableValue = Vodka
            struct.end
            ItemsCount : struct.begin
               VariableType = EGlobalVariableType::Int
               VariableValue = 1
            struct.end
            WithEquipped = false
            WithInventory = true
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_RankCheck_69564 : struct.begin
   SID = QA_Test_Dialogue_Action_RankCheck_69564
   Text = sid_phrase_QA_Test_Dialogue_Action_RankCheck_69564
   AnswerText = sid_label_QA_Test_Dialogue_Action_RankCheck
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_RankCheck_69564
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Veteran_69567
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::RankCheck
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::Rank
            ConditionComparance = EConditionComparance::GreaterOrEqual
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Rank = ERank::Newbie
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_GiveItem_69573 : struct.begin
   SID = QA_Test_Dialogue_Action_GiveItem_69573
   Text = sid_phrase_QA_Test_Dialogue_Action_GiveItem_69573
   AnswerText = sid_label_QA_Test_Dialogue_Action_GiveItem
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_GiveItem_69573
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::GiveItem
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::String
            VariableValue = Medkit
         struct.end
         ItemsCount : struct.begin
            VariableType = EGlobalVariableType::Int
            VariableValue = 1
         struct.end
         WithEquipped = false
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::ItemInInventory
            ConditionComparance = EConditionComparance::GreaterOrEqual
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            ItemPrototypeSID : struct.begin
               VariableType = EGlobalVariableType::String
               VariableValue = Medkit
            struct.end
            ItemsCount : struct.begin
               VariableType = EGlobalVariableType::Int
               VariableValue = 1
            struct.end
            WithEquipped = false
            WithInventory = true
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_GetItem_69574 : struct.begin
   SID = QA_Test_Dialogue_Action_GetItem_69574
   Text = sid_phrase_QA_Test_Dialogue_Action_GetItem_69574
   AnswerText = sid_label_QA_Test_Dialogue_Action_GetItem
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_GetItem_69574
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::GetItem
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::String
            VariableValue = Bread
         struct.end
         ItemsCount : struct.begin
            VariableType = EGlobalVariableType::Int
            VariableValue = 3
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_Veteran_69567 : struct.begin
   SID = QA_Test_Dialogue_Action_Veteran_69567
   Text = sid_phrase_QA_Test_Dialogue_Action_Veteran_69567
   AnswerText = sid_label_QA_Test_Dialogue_Action_Veteran
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 1
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Veteran_69567
   AKEventSubPath = General/Semen/
   FaceAnimationSubPath = General/Semen/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_Veteran_69567
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Master_69566
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::Rank
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = 29D9CD0C408446A49E8E0E81861AE592
            Rank = ERank::Veteran
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_Master_69566 : struct.begin
   SID = QA_Test_Dialogue_Action_Master_69566
   Text = sid_phrase_QA_Test_Dialogue_Action_Master_69566
   AnswerText = sid_label_QA_Test_Dialogue_Action_Master
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Master_69566
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_Master_69566
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::Rank
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = B4EF361B42D2FA72DC709C8B0DC572FC
            Rank = ERank::Master
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_WaitForReply : struct.begin
   SID = QA_Test_Dialogue_Action_WaitForReply
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   LocalizedSequences : struct.begin
      [0] =
      [1] =
   struct.end
   LoopSequence = false
   PreblendSequence = false
   PreblendTime = 0.0
   BlendExpForEaseInOut = 2.0
   SpeechDuration = 0
   ShowNextDialogOptionsAsAnswers = true
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Drink_69583
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::Money
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  Money : struct.begin
                     VariableType = EGlobalVariableType::Int
                     VariableValue = 500
                  struct.end
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               struct.end
            struct.end
         struct.end
      struct.end
      [1] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Eat_69582
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::Money
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  Money : struct.begin
                     VariableType = EGlobalVariableType::Int
                     VariableValue = 1000
                  struct.end
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               struct.end
            struct.end
         struct.end
      struct.end
      [2] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_OpenTradeMenu_69555
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [3] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_OpenUpgradeMenu_69556
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [4] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_HealPlayer_69557
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::HPPercent
                  ConditionComparance = EConditionComparance::LessOrEqual
                  NumericValue = 99.0
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               struct.end
               [1] : struct.begin
                  ConditionType = EQuestConditionType::Bleeding
                  ConditionComparance = EConditionComparance::Greater
                  NumericValue = 0.0
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               struct.end
               [2] : struct.begin
                  ConditionType = EQuestConditionType::Radiation
                  ConditionComparance = EConditionComparance::Greater
                  NumericValue = 0.0
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               struct.end
               [3] : struct.begin
                  ConditionType = EQuestConditionType::Psy
                  ConditionComparance = EConditionComparance::Greater
                  NumericValue = 0.0
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               struct.end
            struct.end
         struct.end
      struct.end
      [5] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_GiveMoney_69558
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::Money
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  Money : struct.begin
                     VariableType = EGlobalVariableType::Int
                     VariableValue = 1000
                  struct.end
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
               struct.end
            struct.end
         struct.end
      struct.end
      [6] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_GetMoney_69559
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [7] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_AttackUI_69560
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [8] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_HitUI_69561
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [9] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Bye_69562
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [10] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_ShowItem_69563
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::ItemInInventory
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                  ItemPrototypeSID : struct.begin
                     VariableType = EGlobalVariableType::String
                     VariableValue = Vodka
                  struct.end
                  ItemsCount : struct.begin
                     VariableType = EGlobalVariableType::Int
                     VariableValue = 1
                  struct.end
                  WithEquipped = false
                  WithInventory = true
               struct.end
            struct.end
         struct.end
      struct.end
      [11] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_RankCheck_69564
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::Rank
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                  Rank = ERank::Newbie
               struct.end
            struct.end
         struct.end
      struct.end
      [12] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_FactionRelationshipCheckWithSpark_69575
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::FactionRelationship
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                  Faction = Varta
                  Relationships = ERelationLevel::Friend
               struct.end
            struct.end
         struct.end
      struct.end
      [13] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_GiveItem_69573
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::ItemInInventory
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                  ItemPrototypeSID : struct.begin
                     VariableType = EGlobalVariableType::String
                     VariableValue = Medkit
                  struct.end
                  ItemsCount : struct.begin
                     VariableType = EGlobalVariableType::Int
                     VariableValue = 1
                  struct.end
                  WithEquipped = false
                  WithInventory = true
               struct.end
            struct.end
         struct.end
      struct.end
      [14] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_GetItem_69574
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [15] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_FactionRelationshipCheckWithVarta_69568
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::FactionRelationship
                  ConditionComparance = EConditionComparance::GreaterOrEqual
                  TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                  Faction = Spark
                  Relationships = ERelationLevel::Friend
               struct.end
            struct.end
         struct.end
      struct.end
      [16] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Threat_69581
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [17] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_SideQuest_69642
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = true
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [18] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_SetGlobalVariable_70254
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
      struct.end
      [19] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Travel_Action_70253
         AvailableFromStart = true
         VisibleOnFailedCondition = true
         MainReply = false
         AnswerTo = -1
         IncludeBy =
         ExcludeBy =
         Conditions : struct.begin
            [0] : struct.begin
               [0] : struct.begin
                  ConditionType = EQuestConditionType::Emission
                  ConditionComparance = EConditionComparance::NotEqual
                  EmissionPrototypeSID = empty
               struct.end
            struct.end
         struct.end
      struct.end
   struct.end
   HasVOInSequence = false
struct.end
QA_Test_Dialogue_Action_FactionRelationshipCheckWithSpark_69575 : struct.begin
   SID = QA_Test_Dialogue_Action_FactionRelationshipCheckWithSpark_69575
   Text = sid_phrase_QA_Test_Dialogue_Action_FactionRelationshipCheckWithSpark_69575
   AnswerText = sid_label_QA_Test_Dialogue_Action_FactionRelationshipCheckWithSpark
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_FactionRelationshipCheckWithSpark_69575
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_FriendSpark_69576
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::FactionRelationshipCheck
         DialogActionParam = Varta
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::GreaterOrEqual
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Varta
            Relationships = ERelationLevel::Friend
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_FactionRelationshipCheckWithVarta_69568 : struct.begin
   SID = QA_Test_Dialogue_Action_FactionRelationshipCheckWithVarta_69568
   Text = sid_phrase_QA_Test_Dialogue_Action_FactionRelationshipCheckWithVarta_69568
   AnswerText = sid_label_QA_Test_Dialogue_Action_FactionRelationshipCheckWithVarta
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_FactionRelationshipCheckWithVarta_69568
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Friend_69569
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::FactionRelationshipCheck
         DialogActionParam = Spark
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::GreaterOrEqual
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Spark
            Relationships = ERelationLevel::Friend
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_FriendSpark_69576 : struct.begin
   SID = QA_Test_Dialogue_Action_FriendSpark_69576
   Text = sid_phrase_QA_Test_Dialogue_Action_FriendSpark_69576
   AnswerText = sid_label_QA_Test_Dialogue_Action_FriendSpark
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_FriendSpark_69576
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_FriendSpark_69576
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_NeutralSpark_69577
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Spark
            Relationships = ERelationLevel::Friend
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_NeutralSpark_69577 : struct.begin
   SID = QA_Test_Dialogue_Action_NeutralSpark_69577
   Text = sid_phrase_QA_Test_Dialogue_Action_NeutralSpark_69577
   AnswerText = sid_label_QA_Test_Dialogue_Action_NeutralSpark
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_NeutralSpark_69577
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_NeutralSpark_69577
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_DisaffectionSpark_69578
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Spark
            Relationships = ERelationLevel::Neutral
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_DisaffectionSpark_69578 : struct.begin
   SID = QA_Test_Dialogue_Action_DisaffectionSpark_69578
   Text = sid_phrase_QA_Test_Dialogue_Action_DisaffectionSpark_69578
   AnswerText = sid_label_QA_Test_Dialogue_Action_DisaffectionSpark
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_DisaffectionSpark_69578
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_DisaffectionSpark_69578
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_EnemySpark_69579
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Spark
            Relationships = ERelationLevel::Disaffection
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_EnemySpark_69579 : struct.begin
   SID = QA_Test_Dialogue_Action_EnemySpark_69579
   Text = sid_phrase_QA_Test_Dialogue_Action_EnemySpark_69579
   AnswerText = sid_label_QA_Test_Dialogue_Action_EnemySpark
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_EnemySpark_69579
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_EnemySpark_69579
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Spark
            Relationships = ERelationLevel::Enemy
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_Friend_69569 : struct.begin
   SID = QA_Test_Dialogue_Action_Friend_69569
   Text = sid_phrase_QA_Test_Dialogue_Action_Friend_69569
   AnswerText = sid_label_QA_Test_Dialogue_Action_Friend
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Friend_69569
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_Friend_69569
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Neutral_69570
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Varta
            Relationships = ERelationLevel::Friend
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_Neutral_69570 : struct.begin
   SID = QA_Test_Dialogue_Action_Neutral_69570
   Text = sid_phrase_QA_Test_Dialogue_Action_Neutral_69570
   AnswerText = sid_label_QA_Test_Dialogue_Action_Neutral
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Neutral_69570
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_Neutral_69570
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Disaffection_69571
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Varta
            Relationships = ERelationLevel::Neutral
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_Disaffection_69571 : struct.begin
   SID = QA_Test_Dialogue_Action_Disaffection_69571
   Text = sid_phrase_QA_Test_Dialogue_Action_Disaffection_69571
   AnswerText = sid_label_QA_Test_Dialogue_Action_Disaffection
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Disaffection_69571
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_Disaffection_69571
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_Enemy_69572
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Varta
            Relationships = ERelationLevel::Disaffection
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_Enemy_69572 : struct.begin
   SID = QA_Test_Dialogue_Action_Enemy_69572
   Text = sid_phrase_QA_Test_Dialogue_Action_Enemy_69572
   AnswerText = sid_label_QA_Test_Dialogue_Action_Enemy
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Enemy_69572
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_Enemy_69572
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::FactionRelationship
            ConditionComparance = EConditionComparance::Equal
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            Faction = Varta
            Relationships = ERelationLevel::Enemy
         struct.end
      struct.end
   struct.end
   DialogActions =
struct.end
QA_Test_Dialogue_Action_QA_Test_qtc_dialog_for_three_Label1_69550 : struct.begin
   SID = QA_Test_Dialogue_Action_QA_Test_qtc_dialog_for_three_Label1_69550
   Text = sid_phrase_QA_Test_qtc_dialog_for_three_Label1_69550
   AnswerText = sid_topic_QA_Test_Dialogue_Action
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 1
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_qtc_dialog_for_three_Label1_69550
   AKEventSubPath = General/Semen/
   FaceAnimationSubPath = General/Semen/
   FaceAnimationAssetName = QA_Test_qtc_dialog_for_three_Label1_69550
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   VisibleOnFailedCondition = true
   MainReply = false
   DialogActions =
struct.end
QA_Test_Dialogue_Action_Drink_69583 : struct.begin
   SID = QA_Test_Dialogue_Action_Drink_69583
   Text = sid_phrase_QA_Test_Dialogue_Action_Drink_69583
   AnswerText = sid_label_QA_Test_Dialogue_Action_Drink
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Drink_69583
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Drink
         ConsumablePrototypeSID : struct.begin
            VariableType = EGlobalVariableType::String
            VariableValue = Vodka
         struct.end
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::Int
            VariableValue = 500
         struct.end
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::Money
            ConditionComparance = EConditionComparance::GreaterOrEqual
            Money : struct.begin
               VariableType = EGlobalVariableType::Int
               VariableValue = 500
            struct.end
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_Eat_69582 : struct.begin
   SID = QA_Test_Dialogue_Action_Eat_69582
   Text = sid_phrase_QA_Test_Dialogue_Action_Eat_69582
   AnswerText = sid_label_QA_Test_Dialogue_Action_Eat
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Eat_69582
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Eat
         ConsumablePrototypeSID : struct.begin
            VariableType = EGlobalVariableType::String
            VariableValue = Bread
         struct.end
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::Int
            VariableValue = 1000
         struct.end
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::Money
            ConditionComparance = EConditionComparance::GreaterOrEqual
            Money : struct.begin
               VariableType = EGlobalVariableType::Int
               VariableValue = 1000
            struct.end
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_Threat_69581 : struct.begin
   SID = QA_Test_Dialogue_Action_Threat_69581
   Text = sid_phrase_QA_Test_Dialogue_Action_Threat_69581
   AnswerText = sid_label_QA_Test_Dialogue_Action_Threat
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Threat_69581
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Threat
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_HealPlayer_69557 : struct.begin
   SID = QA_Test_Dialogue_Action_HealPlayer_69557
   Text = sid_phrase_QA_Test_Dialogue_Action_HealPlayer_69557
   AnswerText = sid_label_QA_Test_Dialogue_Action_HealPlayer
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_HealPlayer_69557
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_HealPlayer_70774
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::Heal
         DialogActionParam : struct.begin
            VariableType = EGlobalVariableType::Int
            VariableValue = 0
         struct.end
      struct.end
   struct.end
   Conditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::HPPercent
            ConditionComparance = EConditionComparance::LessOrEqual
            NumericValue = 99.0
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
         struct.end
         [1] : struct.begin
            ConditionType = EQuestConditionType::Bleeding
            ConditionComparance = EConditionComparance::Greater
            NumericValue = 0.0
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
         struct.end
         [2] : struct.begin
            ConditionType = EQuestConditionType::Radiation
            ConditionComparance = EConditionComparance::Greater
            NumericValue = 0.0
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
         struct.end
         [3] : struct.begin
            ConditionType = EQuestConditionType::Psy
            ConditionComparance = EConditionComparance::Greater
            NumericValue = 0.0
            TargetCharacter = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_HealPlayer_70774 : struct.begin
   SID = QA_Test_Dialogue_Action_HealPlayer_70774
   Text = sid_phrase_QA_Test_Dialogue_Action_HealPlayer_70774
   AnswerText = sid_label_QA_Test_Dialogue_Action_HealPlayer
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 1
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_HealPlayer_70774
   AKEventSubPath = General/Semen/
   FaceAnimationSubPath = General/Semen/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_HealPlayer_70774
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions =
struct.end
QA_Test_Dialogue_Action_SideQuest_69642 : struct.begin
   SID = QA_Test_Dialogue_Action_SideQuest_69642
   Text = sid_phrase_QA_Test_Dialogue_Action_SideQuest_69642
   AnswerText = sid_label_QA_Test_Dialogue_Action_SideQuest
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_SideQuest_69642
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_WaitForReply
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::SideQuest
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_Travel_Action_70253 : struct.begin
   SID = QA_Test_Dialogue_Action_Travel_Action_70253
   Text = sid_phrase_QA_Test_Dialogue_Action_Travel_Action_70253
   AnswerText = sid_label_QA_Test_Dialogue_Action_Travel_Action
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_Travel_Action_70253
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID =
         Terminate = true
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::GuideUI
      struct.end
      [1] : struct.begin
         DialogAction = EDialogAction::Guide
         DialogActionParam = zalesie
      struct.end
   struct.end
   TopicAvailabilityConditions : struct.begin
      [0] : struct.begin
         [0] : struct.begin
            ConditionType = EQuestConditionType::Emission
            ConditionComparance = EConditionComparance::NotEqual
            EmissionPrototypeSID = empty
         struct.end
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_SetGlobalVariable_70254 : struct.begin
   SID = QA_Test_Dialogue_Action_SetGlobalVariable_70254
   Text = sid_phrase_QA_Test_Dialogue_Action_SetGlobalVariable_70254
   AnswerText = sid_label_QA_Test_Dialogue_Action_SetGlobalVariable
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = -1
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_SetGlobalVariable_70254
   AKEventSubPath = General/PC/
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID = QA_Test_Dialogue_Action_SetGlobalVariable_70255
         Terminate = false
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions : struct.begin
      [0] : struct.begin
         DialogAction = EDialogAction::SetGlobalVariable
         GlobalVariablePrototypeSID = SQ18_ShootedApples
         ChangeValueMode = EChangeValueMode::Set
         VariableValue = 3
      struct.end
   struct.end
struct.end
QA_Test_Dialogue_Action_SetGlobalVariable_70255 : struct.begin
   SID = QA_Test_Dialogue_Action_SetGlobalVariable_70255
   Text = sid_phrase_QA_Test_Dialogue_Action_SetGlobalVariable_70255
   AnswerText = sid_label_QA_Test_Dialogue_Action_SetGlobalVariable
   DialogChainPrototypeSID = QA_Test_Dialogue_Action
   DialogMemberIndex = 0
   CanBeInterrupted = true
   Unskippable = false
   DialogMembersAnimations : struct.begin
      [0] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [1] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = -1
         DialogAnimations =
      struct.end
      [2] : struct.begin
         EmotionalState = EEmotionalFaceMasks::None
         LookAtTarget = 0
         DialogAnimations =
      struct.end
   struct.end
   AKEventName = VO_QA_Test_Dialogue_Action_SetGlobalVariable_70255
   AKEventSubPath = General/Test/
   FaceAnimationSubPath = General/Test/
   FaceAnimationAssetName = QA_Test_Dialogue_Action_SetGlobalVariable_70255
   NextDialogOptions : struct.begin
      [0] : struct.begin
         NextDialogSID =
         Terminate = true
      struct.end
   struct.end
   HasVOInSequence = false
   DialogActions =
struct.end