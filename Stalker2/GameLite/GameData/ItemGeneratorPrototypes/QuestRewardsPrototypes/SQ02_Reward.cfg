SQ02_reward_var1 : struct.begin {refurl=../../ItemGeneratorPrototypes.cfg;refkey=[0]}
   SID = SQ02_reward_var1
   ItemGenerator : struct.begin
      [0] : struct.begin
         Category = EItemGenerationCategory::Ammo
         bAllowSameCategoryGeneration = true
         PossibleItems : struct.begin
            [0] : struct.begin
               ItemPrototypeSID = A556D
               Chance = 1
               MinCount = 30
               MaxCount = 30
               bRequireWeapon = false
            struct.end
         struct.end
      struct.end
      [1] : struct.begin
         Category = EItemGenerationCategory::WeaponPrimary
         PossibleItems : struct.begin
            [0] : struct.begin
               ItemPrototypeSID = Gun_Unknown_AR
               Chance = 1
               Weight = 1000
               MinDurability = 0.1
               MaxDurability = 0.11
               AmmoMinCount = 30
               AmmoMaxCount = 30
            struct.end
         struct.end
      struct.end
   struct.end
struct.end
SQ02_reward_var3 : struct.begin {refurl=../../ItemGeneratorPrototypes.cfg;refkey=[0]}
   SID = SQ02_reward_var3
   MoneyGenerator : struct.begin
      MinCount = 2000
      MaxCount = 2000
   struct.end
struct.end
SQ02_reward_var2 : struct.begin {refurl=../../ItemGeneratorPrototypes.cfg;refkey=[0]}
   SID = SQ02_reward_var2
   MoneyGenerator : struct.begin
      MinCount = 2000
      MaxCount = 2000
   struct.end
   ItemGenerator : struct.begin
      [0] : struct.begin
         Category = EItemGenerationCategory::Consumable
         bAllowSameCategoryGeneration = true
         PossibleItems : struct.begin
            [0] : struct.begin
               ItemPrototypeSID = CannedFood
               Chance = 1
               MinCount = 5
               MaxCount = 5
            struct.end
            [1] : struct.begin
               ItemPrototypeSID = Vodka
               Chance = 1
               MinCount = 1
               MaxCount = 1
            struct.end
         struct.end
      struct.end
   struct.end
struct.end
