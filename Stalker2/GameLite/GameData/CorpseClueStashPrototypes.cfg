Default : struct.begin
   SID = empty
   BaseSpawnChance = 0.04
   AddSpawnChance = 0.02
   AdditionalSearchRadius = 1000000
   Region = ERegion::Zone
   CorpseClueData : struct.begin
      [*] : struct.begin
         Rank = ERank::Newbie
         RankClue : struct.begin
            [*] : struct.begin
               Rank = ERank::Newbie
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Experienced
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Veteran
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Master
               Weight = 10.0;
            struct.end
         struct.end
      struct.end
      [*] : struct.begin
         Rank = ERank::Experienced
         RankClue : struct.begin
            [*] : struct.begin
               Rank = ERank::Newbie
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Experienced
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Veteran
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Master
               Weight = 10.0;
            struct.end
         struct.end
      struct.end
      [*] : struct.begin
         Rank = ERank::Veteran
         RankClue : struct.begin
            [*] : struct.begin
               Rank = ERank::Newbie
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Experienced
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Veteran
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Master
               Weight = 10.0;
            struct.end
         struct.end
      struct.end
      [*] : struct.begin
         Rank = ERank::Master
         RankClue : struct.begin
            [*] : struct.begin
               Rank = ERank::Newbie
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Experienced
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Veteran
               Weight = 10.0;
            struct.end
            [*] : struct.begin
               Rank = ERank::Master
               Weight = 10.0;
            struct.end
         struct.end
      struct.end
   struct.end
struct.end
MalayaZona : struct.begin {refkey=Default}
   SID = MalayaZona
   Region = ERegion::MalayaZona
struct.end
Svalka : struct.begin {refkey=Default}
   SID = Svalka
   Region = ERegion::Svalka
struct.end
ChemZavod : struct.begin {refkey=Default}
   SID = ChemZavod
   Region = ERegion::ChemZavod
struct.end
DickyOstrov : struct.begin {refkey=Default}
   SID = DickyOstrov
   Region = ERegion::DickyOstrov
struct.end
Zaton : struct.begin {refkey=Default}
   SID = Zaton
   Region = ERegion::Zaton
struct.end
Bolota : struct.begin {refkey=Default}
   SID = Bolota
   Region = ERegion::Bolota
struct.end
NIICHAZ : struct.begin {refkey=Default}
   SID = NIICHAZ
   Region = ERegion::NIICHAZ
struct.end
Gradirni : struct.begin {refkey=Default}
   SID = Gradirni
   Region = ERegion::Gradirni
struct.end
Promzona : struct.begin {refkey=Default}
   SID = Promzona
   Region = ERegion::ChemZavod
struct.end
Malahit : struct.begin {refkey=Default}
   SID = Malahit
   Region = ERegion::Malahit
struct.end
Duga : struct.begin {refkey=Default}
   SID = Duga
   Region = ERegion::Duga
struct.end
Rostock : struct.begin {refkey=Default}
   SID = Rostock
   Region = ERegion::Rostock
struct.end
Yantar : struct.begin {refkey=Default}
   SID = Yantar
   Region = ERegion::Yantar
struct.end
GoreliyLes : struct.begin {refkey=Default}
   SID = GoreliyLes
   Region = ERegion::GoreliyLes
struct.end
Kordon : struct.begin {refkey=Default}
   SID = Kordon
   Region = ERegion::Kordon
struct.end
RizhyLes : struct.begin {refkey=Default}
   SID = RizhyLes
   Region = ERegion::RizhyLes
struct.end
Yanov : struct.begin {refkey=Default}
   SID = Yanov
   Region = ERegion::Yanov
struct.end
Jupiter : struct.begin {refkey=Default}
   SID = Jupiter
   Region = ERegion::Jupiter
struct.end
Pripyat : struct.begin {refkey=Default}
   SID = Pripyat
   Region = ERegion::Pripyat
struct.end
ZheleznyLes : struct.begin {refkey=Default}
   SID = ZheleznyLes
   Region = ERegion::ZheleznyLes
struct.end
CHAES : struct.begin {refkey=Default}
   SID = CHAES
   Region = ERegion::CHAES
struct.end
Generatory : struct.begin {refkey=Default}
   SID = Generatory
   Region = ERegion::Generatory
struct.end
ZementniyZavod : struct.begin {refkey=Default}
   SID = ZementniyZavod
   Region = ERegion::ZementniyZavod
struct.end
